//Resource combos make sure that the resources added stay in the correct ratios despite where the sliders are. For instance,
//many rocket engines use a ratio of 0.45/0.55 for LiquidFuel and Oxidizer. No matter where the sliders are, the omni storage
//will ensure that the resource units are automatically adjusted to follow the ratios.
//You can add any number of resources, but make sure that the ratios all add up to 1.0. It also helps if the resource volumes are all the same
//so that the unit volumes are also the same (5-liter units is the stock standard).
//NOTE: For now, only the first combo pattern to match the resources in the omni storage will be applied.
OMNIRESOURCECOMBO
{
	name = LFO
	RESOURCE
	{
		name = LiquidFuel
		ratio = 0.45
		maxAmountMultiplier = 1.0 //Multiplies the max storage capacity of the combo resource by this amount. Default is 1.0 so you can omit this.
	}
	RESOURCE
	{
		name = Oxidizer
		ratio = 0.55
		maxAmountMultiplier = 1.0 //Multiplies the max storage capacity of the combo resource by this amount. Default is 1.0 so you can omit this.
	}
}
OMNIRESOURCECOMBO
{
	name = RHK
	RESOURCE
	{
		name = RHK1
		ratio = 0.45
	}
	RESOURCE
	{
		name = Oxidizer
		ratio = 0.55
	}
}
OMNIRESOURCECOMBO
{
	name = LH2
	RESOURCE
	{
		name = LqdHydrogen
		ratio = 0.9375
		maxAmountMultiplier = 1.0
	}

	RESOURCE
	{
		name = Oxidizer
		ratio = 0.0625
		maxAmountMultiplier = 1.0
	}
}

OMNIRESOURCECOMBO
{
	name = PropLox
	RESOURCE
	{
		name = Propellium
		ratio = 0.75
		maxAmountMultiplier = 1.5
	}

	RESOURCE
	{
		name = Oxidizer
		ratio = 0.25
		maxAmountMultiplier = 1.5
	}
}


//The amount of resource in a part depends upon the size of the storage in liters, the number of resources in the container, the number of liters allocated per resource,
//and the volume of the resource. Most stock and Classic Stock resources have a volume of 5, meaning that one unit of resource takes up 5 liters. For the OmniStorage,
//the maximum number of units possible is: liters per resource / resource volume. So if a resource has 1000 liters of capacity allocated to it, and the resource volume is 5,
//then the maximum number of units that the container can hold is 1000 / 5 = 200. For some resources, that might not be enough, or might not make sense.
//For ElectricCharge, for instance, batteries are very compact. So the RESOURCE_MULTIPLIER node provides a way to alter the max number of units that a container can hold.
//The formula is: (litersPerResource / resourceVolume) * maxAmountMultiplier. Continuing the example above, if maxAmountMultiplier is 20, then
//the max units that can be stored in the container is: (1000 / 5) * 20 = 4000.
MAX_RESOURCE_MULTIPLIER
{
	name = ElectricCharge
	maxAmountMultiplier = 20
}