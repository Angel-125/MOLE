PART
{
	name = wbiLassoSize3
	module = Part
	author = Angel-125
	MODEL
	{
		model = WildBlueIndustries/Pathfinder/Parts/Aero/Lasso/LassoSize3
	}
	rescaleFactor = 1

	node_stack_bottom = 0, 0, 0, 0, -1, 0, 2
	node_attach = 0.0, 0.0, 0.0, 0.0, 0.0, -1.0

	TechRequired = heavyAerodynamics
	entryCost = 24000
	cost = 16000
	category = Aero
	subcategory = 0
	title = Lasso-300 Aero/Hydro/Exo Scoop
	manufacturer = Wild Blue Industries
	description = Not your typical turbofan intake, the Lasso can separate atmospheric gasses and oceanic liquids into useful resources. Unlike the smaller versions, this version also has the ability to scoop up exo-atmospheric gasses as well.
	attachRules = 1,1,0,1,0
	mass = 3.2
	heatConductivity = 0.06 // half default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.8 // engine nozzles are good at radiating.
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 2000 // = 3600
	bulkheadProfiles = size1

	MODULE
	{
		name = ModuleResourceIntake
		resourceName = IntakeAir
		checkForOxygen = true
		area = 0.06
		intakeSpeed = 60
		intakeTransformName = Intake
	}

	MODULE
	{
		name = ModuleResourceHarvester
		HarvesterType = 2 //Atmospheric
		AutoShutdown = true
		ResourceName = Atmosphere
		ConverterName = Atmosphere Scoop
		StartActionName = Open Atmosphere Scoop
		StopActionName = Close Atmosphere Scoop
		ToggleActionName = Toggle Atmosphere Scoop
		intakeTransformName = Intake
		intakeSpeed = 60
		airStaticSpeed = 60
		AlwaysActive = true
	}

	MODULE
	{
		name = ModuleResourceHarvester
		HarvesterType = 3 //Exo
		AutoShutdown = true
		Efficiency = 0.02
		ResourceName = Atmosphere
		ConverterName = Exosphere Scoop
		StartActionName = Start Exospheric Scoop
		StopActionName = Stop Exospheric Scoop
		ToggleActionName = Toggle Exosphere Scoop
		AlwaysActive = true

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 60
		}
	}

	MODULE
	{
		name = ModuleResourceIntake
		resourceName = IntakeLqd
		checkForOxygen = false
		area = 0.06
		intakeSpeed = 60
		underwaterOnly = true
		intakeTransformName = Intake
	}

	MODULE
	{
		name = WBIProspector
		ConverterName = Atmosphere Processor
		StartActionName = Start Atmosphere Processor
		StopActionName = Stop Atmosphere Processor
		AutoShutdown = false
		GeneratesHeat = false
		guiVisible = true
		harvestTypes = Atmospheric;Exospheric
		outputsGuiName = Show Processor Outputs

		INPUT_RESOURCE
		{
			ResourceName = Atmosphere
			Ratio = 0.1
		}		

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 5
		}		
	}

	MODULE
	{
		name = WBIProspector
		ConverterName = Liquid Distiller
		StartActionName = Start Liquid Distiller
		StopActionName = Stop Liquid Distiller
		AutoShutdown = false
		GeneratesHeat = false
		guiVisible = true
		harvestTypes = Oceanic
		outputsGuiName = Show Distiller Outputs

		INPUT_RESOURCE
		{
			ResourceName = IntakeLqd
			Ratio = 0.1
		}		

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 5
		}		
	}

	MODULE
	{
		name = ModuleResourceScanner
		MaxAbundanceAltitude = 5000000
		RequiresUnlock = true
		ScannerType = 3
		ResourceName = Atmosphere
	}

	MODULE
	{
		name = WBIScoopTurbine
		rotationTransform = TurbineFan
		rotationRate = 180
		rotationAxis = 0,1,0
	}

	MODULE:NEEDS[BARIS]
	{
		name = ModuleQualityControl
		mtbf = 400
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 15
		CONSTRAINT
		{
			type = OXYGEN
			value = True
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 300
			situationMask = 8
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 50
			situationMask = 8
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.3
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.1
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.05
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 500
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}

	RESOURCE
	{
		name = IntakeAir
		amount = 20
		maxAmount = 20
	}


	RESOURCE
	{
		name = Atmosphere
		amount = 20
		maxAmount = 20
	}

	RESOURCE
	{
		name = IntakeLqd
		amount = 20
		maxAmount = 20
	}
}
