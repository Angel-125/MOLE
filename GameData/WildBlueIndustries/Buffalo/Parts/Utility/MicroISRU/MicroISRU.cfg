PART
{
	name = WBI_MicroISRU
	module = Part
	author = Angel-125

	MODEL
	{
		model = WildBlueIndustries/Buffalo/Parts/Utility/MicroISRU/MicroISRU
	}
	rescaleFactor = 1
	node_attach = 0, 0, 0, 0, -1, 0, 1
	node_stack_bottom = 0, 0, 0, 0, -1, 0, 1
	node_stack_top = 0, 0.8288187, 0, 0, 1, 0, 1

	TechRequired = advScienceTech
	entryCost = 4000
	cost = 1000
	category = Utility
	subcategory = 0
	title = Micro ISRU
	manufacturer = Wild Blue Industries
	description = The Micro ISRU was designed for emergency situations. It can only produce one resource at a time from ore, but it's better than nothing and it's solar powered.
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,1

	// --- standard part parameters ---
	mass = 0.675
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 20
	maxTemp = 900
	breakingForce = 50
	breakingTorque = 50
	bulkheadProfiles = size1, srf

	MODULE:NEEDS[KIS]
	{
		name = ModuleKISItemEvaTweaker
		volumeOverride = 1100
		editorItemsCategory = false
		carriable = true
		equipMode = part
		equipSlot = jetpack
		equipMeshName = jetpack_base01
		equipBoneName = bn_jetpack01
		equipPos = (0,-0.2,-0.45)
		equipDir = (0,0,0)
		runSpeed = 0.8
		allowPartAttach = AllowedWithKisTool
	}

	MODULE
	{
		name = WBIMultiConverter
		enableLogging = True

		//Determines if the module allows in-field reconfiguring
		fieldReconfigurable = True

		//Require a confirmation click before changing resources
		confirmResourceSwitch = True

		//Determines whether or not to show the context menu GUI
		showGUI = True

		//Short name of the default module template.
		//This is used when selecting the part in the editor.
		//User will then right-click on the module to change its type.
		defaultTemplate = LiquidFuel

		//name of the template nodes to use
		templateNodes = MICRO_ISRU

		//Some containers don't hold as much resources as the template specifies, while others hold more.
		//Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
		//factor into the resource amounts.
		capacityFactor = 1.0
	}	

	MODULE:NEEDS[BARIS]
	{
		name = ModuleQualityControl
		mtbf = 400
	}

	MODULE
	{
		name = ModuleDeployableSolarPanel
		sunTracking = false
		raycastTransformName = suncatcher
		pivotName = suncatcher
		isBreakable = false
		resourceName = ElectricCharge
		impactResistance = 20
		chargeRate = 1.4
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 50
		maxAmount = 50
		isTweakable = true
	}

	RESOURCE
	{
		name = Ore
		amount = 2.5
		maxAmount = 2.5
		isTweakable = true
	}
}

@PART[KIS_ContainerMount1]:NEEDS[KIS]
{
	@MODULE[ModuleKISPartMount]
	{
		@MOUNT
		{
			allowedPartName = WBI_MicroISRU
		}
	}
}