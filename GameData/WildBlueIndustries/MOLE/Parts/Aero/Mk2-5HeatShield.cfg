PART
{
	// this is a sample config file, for determining a good file format for defining part parameters
	// comment line - ignored by cfg parser
	// empty lines, or lines without a '=' sign are also ignored
	// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
	// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
	// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
	// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
	// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
	// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


	// --- general parameters ---
	name = WBI_MK2-5HeatShield
	module = Part
	author = Angel-125

	// --- asset parameters ---
	MODEL
	{
		model = WildBlueIndustries/MOLE/Assets/Mk2-5HeatShield
	}
	rescaleFactor = 1


	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_top = 0.0, 0.132, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, -0.1364, 0.0, 0.0, -1.0, 0.0, 1

	// --- editor parameters ---
	TechRequired = landing
	entryCost = 1200
	cost = 600
	category = Aero
	subcategory = 0
	title = Heat Shield (2.5m)
	manufacturer = Wild Blue Industries
	description = This specially designed heat shield has a crew hatch cut into the bottom to permit crew transfers. Tests indicate that closing the hatch before re-entry appears to provide the best chance for survival.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 0.5
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	breakingForce = 200
	breakingTorque = 200
	crashTolerance = 9
	maxTemp = 3400
	fuelCrossFeed = False
	stageOffset = 1
	childStageOffset = 1
	thermalMassModifier = 1.0
	CoPOffset = 0.0, 1.0, 0.0
	CoLOffset = 0.0, -0.15, 0.0
//	CenterOfBuoyancy = 0.0, 0.8, 0.0
//	CenterOfDisplacement = 0.0, 0.5, 0.0
//	buoyancyUseSine = False
//	buoyancy = 0.5 //1.1
	fx_gasBurst_white = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, decouple
	sound_vent_large = decouple
	bulkheadProfiles = size1p5

	MODULE
	{
		name = ModuleJettison
		jettisonName = Shroud
		bottomNodeName = bottom
		isFairing = True
		jettisonedObjectMass = 0.5
		jettisonForce = 15
		jettisonDirection = 0 0 1
		stageToJettison = True
		checkBottomNode = True
	}	
	
	MODULE
	{
		name = ModuleDecouple
		ejectionForce = 100
		isOmniDecoupler = true
		menuName = Jettison Heat Shield
		stagingEnabled = False
		stagingEnableText = HS Jettison Not Staged
		stagingDisableText = HS Jettison Staged
	}

	MODULE
	{
		name = ModuleAblator
		ablativeResource = Ablator
		lossExp = -7500
		lossConst = 0.1
		pyrolysisLossFactor = 6000
		reentryConductivity = 0.01
		ablationTempThresh = 500
	}

	RESOURCE
	{
		name = Ablator
		amount = 800
		maxAmount = 800
	}	

	MODULE
	{
		name = ModuleTestSubject
		useStaging = False
		useEvent = True
		situationMask = 15
		CONSTRAINT
		{
			type = ATMOSPHERE
			value = True
		}
		CONSTRAINT
		{
			// prelaunch only at home
			// our main situationMask above includes prelaunch
			// but if nothome, here, and that mask with this value (11)
			// which excludes prelaunch
			type = SITUATION
			value = 11
			body = _NotHome
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 350
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 250
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 500
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 300
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 600
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 400
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1500
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 1000
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 1500
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 6000
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 2000
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = DENSITY
			test = LT
			value = 0.1
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 6000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 8000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 12000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 12000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 16000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}


}
