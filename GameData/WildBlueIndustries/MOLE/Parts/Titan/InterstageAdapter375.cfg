PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


	// --- general parameters ---
	name = WBI_InterstageAdapter375
	module = Part
	author = Angel-125

	// --- asset parameters ---
	MODEL
	{
		model = WildBlueIndustries/MOLE/Parts/Titan/InterstageAdapter375
	}
	rescaleFactor = 1

	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_top = 0.0, 0, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_mount0 = 0.0, -0.09547678, 0.0, 0.0, -1.0, 0.0, 1
	node_stack_bottom0 = 0.0, -0.7235059, 0.0, 0.0, -1.0, 0.0, 2
	node_stack_bottom1 = 0.0, -1.45, 0.0, 0.0, -1.0, 0.0, 2
	node_stack_bottom2 = 0.0, -2.345, 0.0, 0.0, -1.0, 0.0, 2

	NODE
	{
		name = mount1
		transform = engine1
	}

	NODE
	{
		name = mount2
		transform = engine2
	}

	NODE
	{
		name = mount3
		transform = engine3
	}

	NODE
	{
		name = mount4
		transform = engine4
	}

	NODE
	{
		name = mount5
		transform = engine5
	}

	NODE
	{
		name = mount6
		transform = engine6
	}

	// --- FX definitions ---
	fx_gasBurst_white = 0.0, 0.0650517, 0.0, 0.0, 1.0, 0.0, decouple
	sound_vent_large = decouple

	// --- editor parameters ---
	TechRequired = advMetalworks
	entryCost = 4000
	cost = 450
	category = Structural
	subcategory = 0
	title = IA-375 Interstage Adapter
	manufacturer = Wild Blue Industries
	description = Some bean counter at Wild Blue Industries decided that making an interstage adapter would be faster and cheaper than building a whole new engine and this interstage adapter is the result. Simply clip one of these onto the aft end of a Titan tank and then bolt an engine inside. Or seven. Also, the bottom nodes let you decide how long an interstage adapter you want.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 0.4
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	breakingForce = 600
	breakingTorque = 600
	crashTolerance = 9
	maxTemp = 2000
	fuelCrossFeed = true
	stageOffset = 1
	childStageOffset = 1
	bulkheadProfiles = size1p5

	MODULE
	{
		name = ModuleJettison
		jettisonName = EngineShroudS
		bottomNodeName = bottom0
		isFairing = True
		jettisonedObjectMass = 0.25
		jettisonForce = 50
		jettisonDirection = 0 0 1
	}

	MODULE
	{
		name = ModuleJettison
		jettisonName = EngineShroudM
		bottomNodeName = bottom1
		isFairing = True
		jettisonedObjectMass = 0.25
		jettisonForce = 50
		jettisonDirection = 0 0 1
	}

	MODULE
	{
		name = ModuleJettison
		jettisonName = EngineShroudL
		bottomNodeName = bottom2
		isFairing = True
		jettisonedObjectMass = 0.25
		jettisonForce = 50
		jettisonDirection = 0 0 1
	}

	MODULE
	{
		name = WBIModuleJettisonHelper
		jettisonNames = EngineShroudS,Shroud (S);EngineShroudM,Shroud (M);EngineShroudL,Shroud (L)
	}

	MODULE
	{
		name = ModuleMultiEngineAdapter
		objects = SingleEngineFrame;TwoNodes;FourNodes;SixNodes
		nodes = 0,2,4,6
		labels = 1,3,5,7
		nodePrefix = mount
		nodeRadius = 1.25
		maxNodes = 6
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = False
		useEvent = False
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2000
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
	}

}
