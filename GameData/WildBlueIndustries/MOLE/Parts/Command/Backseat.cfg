PART
{
	// this is a sample config file, for determining a good file format for defining part parameters
	// comment line - ignored by cfg parser
	// empty lines, or lines without a '=' sign are also ignored
	// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
	// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
	// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
	// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
	// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
	// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


	// --- general parameters ---
	name = WBI_Backseat2
	module = Part
	author = Angel-125

	// --- asset parameters ---
	MODEL
	{
		model = WildBlueIndustries/MOLE/Assets/Backseat2
	}
	rescaleFactor = 1

	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_top = 0.0, 0.386, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_bottom = 0.0, -0.5512565, 0.0, 0.0, -1.0, 0.0, 1


	// --- editor parameters ---
	TechRequired = flightControl
	entryCost = 1000
	cost = 800
	category = Pods
	subcategory = 0
	title = Mk1-85 Appaloosa
	manufacturer = Wild Blue Industries
	description = The Mk1-85, known as the Appaloosa and nicknamed the "Backseat" by pilots, is what happens when engineers spill coffee on blueprints and then try to interpret the smeared results. It was originally intended as an upgraded Mk1 Command Pod, but when submitted to KSC for review, the company received a resounding "NO" in response. Wild Blue Industries saved face by offering the Mk1-85 as a backseat extension for the Mk1 that can be upgraded before launch as technology improves.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 1.4
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.15
	angularDrag = 2
	crashTolerance = 14
	breakingForce = 200
	breakingTorque = 200
	maxTemp = 1300
	skinMaxTemp = 2300
	CoMOffset = 0,-.6,0
	CoPOffset = 0.0, -0.4, 0.0 //drag force offset, should be ahead of center of mass
	CenterOfBuoyancy = 0.0, 0.5, 0.0
	CenterOfDisplacement = 0.0, -1.7, 0.0
	buoyancyUseSine = False
	buoyancy = 1.1
	bulkheadProfiles = size1, size1p5
	vesselType = Ship

	// --- internal setup ---
	CrewCapacity = 1

	INTERNAL
	{
		name = WBI_BackseatSpaceStock
	}

	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0	
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.02777778
		}
	}

	MODULE
	{
		name = WBIModuleSAS
	}

	MODULE
	{
		name = ModuleSASUpgrade
		levelOneNode = advRocketry
		levelTwoNode = advFlightControl 
		levelThreeNode = specializedControl 
	}

	MODULE
	{
		name = ModuleKISInventory
		maxVolume = 1200
		externalAccess = true
		internalAccess = true
		slotsX = 6
		slotsY = 4
		slotSize = 50
		itemIconResolution = 128
		selfIconResolution = 128
		openSndPath = KIS/Sounds/containerOpen
		closeSndPath = KIS/Sounds/containerClose
		defaultMoveSndPath = KIS/Sounds/itemMove
	}

	MODULE
	{
		name = WBIConvertibleStorage
		enableLogging = True
		showGUI = True

		//Require a confirmation click before changing resources
		confirmResourceSwitch = True
	
		//Short name of the default module template.
		//This is used when selecting the part in the editor.
		//User will then right-click on the module to change its type.
		defaultTemplate = BackseatCrew

		//name of the template nodes to use
		templateNodes = BACKSEAT;STORAGE_TEMPLATE
		templateTypes = Storage

		//Determines if the module allows in-field reconfiguring
		fieldReconfigurable = True

		//Some containers don't hold as much resources as the template specifies, while others hold more.
		//Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
		//factor into the resource amounts.
		capacityFactor = 0.075
		resourcesToKeep = ElectricCharge

		//Name of the logo panel transforms
		decalsVisible = false

		//If the part has a KIS container, this is the base and max amount
		baseStorage = .001
		maxStorage = 1200
	}

	MODULE
	{
		name = ModuleBackseatController
		animationName = Deploy
		startEventGUIName = Up Scope
		endEventGUIName = Down Scope
		upgradeTech = advFlightControl
	}

	MODULE
	{
		name = WBILight
		animationName = BackseatLights
		actionGUIName = Toggle Lights
		startEventGUIName = Lights On
		endEventGUIName = Lights Off
		ecRequired = 0.04
	}

	MODULE
	{
		name = ModuleRCSTechCheck
		upgradeTech = advFlightControl
		objects = RCSNodes
	}

	MODULE
	{
		name = WBIModuleRCS
		soundFilePath = Squad/Sounds/sound_rocket_mini
		thrusterTransformName = rcsThruster
		thrusterPower = 0.75
		resourceName = MonoPropellant
		resourceFlowMode = STAGE_PRIORITY_FLOW

		atmosphereCurve
		{
			key = 0 260
			key = 1 100
		}
	}

	MODULE
	{
		name = ModuleReactionWheel	
		PitchTorque = 3
		YawTorque = 3
		RollTorque = 3
	
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.15
		}
	}

	MODULE
	{
		name = ModuleScienceExperiment	
	
		experimentID = crewReport
	
		experimentActionName = Crew Report
		resetActionName = Discard Crew Report
		reviewActionName = Review Report
	
		useStaging = False	
		useActionGroups = True
		hideUIwhenUnavailable = True	
		rerunnable = True
	
		xmitDataScalar = 1.0
	}

	MODULE
	{
		name = ModuleScienceContainer
	
		reviewActionName = Review Stored Data
		storeActionName = Store Experiments
		evaOnlyStorage = True
		storageRange = 1.3
	}

	MODULE
	{
		name = WBIPropStateHelper
	}

	MODULE
	{
		name = ModuleResourceConverter
		ConverterName = MPU
		StartActionName = Start MPU
		StopActionName = Stop MPU
		FillAmount = 0.99		 
		AutoShutdown = true
		GeneratesHeat = false
		TemperatureModifier = 60
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		Specialty = Engineer
		EfficiencyBonus = 1.0
		 
		INPUT_RESOURCE
		{
			ResourceName = MonoPropellant
			Ratio = 0.00375
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.75
			DumpExcess = false
		}
	}

	MODULE
	{
		name = WBINodeMover
		nodeName = top
		primaryNodePosition = 0.386
		altNodePosition = 0.5211682
	}

	RESOURCE
	{
		name = ElectricCharge
		amount = 100
		maxAmount = 100
	}

}

BACKSEAT
{
	name = BackseatCrew
	author = Angel-125
	shortName = BackseatCrew
	logoPanel = WildBlueIndustries/000WildBlueTools/CommonTemplates/Decals/Monopropellant
	glowPanel = WildBlueIndustries/000WildBlueTools/CommonTemplates/Decals/MonopropellantGlow
	description = This kit has the resources used by the crewed version of the Backseat

	RESOURCE
	{
		name = MonoPropellant
		amount = 1333.333333333333
		maxAmount = 1333.333333333333
	}

	RESOURCE:NEEDS[Snacks]
	{
		name = Snacks
		amount = 666.6666666666667
		maxAmount = 666.6666666666667
	}

	RESOURCE:NEEDS[Kerbalism]
	{
		name = Food
		amount = 1333.333333333333
		maxAmount = 1333.333333333333
	}

	RESOURCE:NEEDS[Kerbalism]
	{
		name = Oxygen
		amount = 66666.66666666667
		maxAmount = 66666.66666666667
	}

	RESOURCE:NEEDS[USILifeSupport]
	{
		name = Supplies
		amount = 4320
		maxAmount = 4320
	}

}

BACKSEAT
{
	name = Science
	author = Angel-125
	shortName = Science!
	logoPanel = WildBlueIndustries/MOLE/Decals/MOLELab
	glowPanel = WildBlueIndustries/MOLE/Decals/MOLELab
	description = This kit is used to transport various science experiments to another vessel or to bring them back to Kerbin to reap the rewards. In the VAB/SPH, you can open the experiment manifest window to select one of the experiment slots, and then choose an experiment from the available list. In flight, you can transfer experiments into and out of the Backseat to any part that supports an experiment manifest. If an experiment has been completed, it can only be tranfered one last time, so be sure to make the right choice.

	MODULE
	{
		name = WBIModuleScienceExperiment
		experimentID = WBIEmptyExperiment
		defaultExperiment = WBIEmptyExperiment
		experimentActionName = Do Nothing
		resetActionName = Reset Nothing
		useStaging = False
		useActionGroups = True
		hideUIwhenUnavailable = True
		xmitDataScalar = 0.0001
		dataIsCollectable = False
		interactionRange = 1.2
		rerunnable = False
		resettable = False
		usageReqMaskInternal = 1
		usageReqMaskExternal = 8
	}

	MODULE
	{
		name = WBIModuleScienceExperiment
		experimentID = WBIEmptyExperiment
		defaultExperiment = WBIEmptyExperiment
		experimentActionName = Do Nothing
		resetActionName = Reset Nothing
		useStaging = False
		useActionGroups = True
		hideUIwhenUnavailable = True
		xmitDataScalar = 0.0001
		dataIsCollectable = False
		interactionRange = 1.2
		rerunnable = False
		resettable = False
		usageReqMaskInternal = 1
		usageReqMaskExternal = 8
	}

	MODULE
	{
		name = WBIModuleScienceExperiment
		experimentID = WBIEmptyExperiment
		defaultExperiment = WBIEmptyExperiment
		experimentActionName = Do Nothing
		resetActionName = Reset Nothing
		useStaging = False
		useActionGroups = True
		hideUIwhenUnavailable = True
		xmitDataScalar = 0.0001
		dataIsCollectable = False
		interactionRange = 1.2
		rerunnable = False
		resettable = False
		usageReqMaskInternal = 1
		usageReqMaskExternal = 8
	}

	MODULE
	{
		name = WBIModuleScienceExperiment
		experimentID = WBIEmptyExperiment
		defaultExperiment = WBIEmptyExperiment
		experimentActionName = Do Nothing
		resetActionName = Reset Nothing
		useStaging = False
		useActionGroups = True
		hideUIwhenUnavailable = True
		xmitDataScalar = 0.0001
		dataIsCollectable = False
		interactionRange = 1.2
		rerunnable = False
		resettable = False
		usageReqMaskInternal = 1
		usageReqMaskExternal = 8
	}	

	MODULE
	{
		name = WBIExperimentManifest
		defaultExperiment = WBIEmptyExperiment
	}

	RESOURCE
	{
		name = MonoPropellant
		amount = 1333.333333333333
		maxAmount = 1333.333333333333
	}
}

//ASET/RPM versions of the cockpit
@PART[WBI_Backseat2]:NEEDS[RasterPropMonitor]
{
	!MODULE[WBIPropStateHelper] {}

	MODULE
	{
		name = RasterPropMonitorComputer 
	}

	@INTERNAL[WBI_BackseatSpaceStock]:NEEDS[ASETPropsIdentifier]
	{
		@name = WBI_BackseatSpaceASET
	}
	@INTERNAL[WBI_BackseatSpaceStock]:NEEDS[!ASETPropsIdentifier]
	{
		@name = WBI_BackseatSpaceRPM
	}
}

@PART[WBI_Backseat2]:NEEDS[kOS]
{
	MODULE
	{
		name = kOSProcessor
		diskSpace = 5000
	}
}