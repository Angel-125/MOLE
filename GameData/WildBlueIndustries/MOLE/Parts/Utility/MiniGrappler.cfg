PART:NEEDS[!RestockPlus]
{
	name = wbiMiniGrapplingDevice
	module = Part
	author = Squad

	rescaleFactor = 0.575
	MODEL
	{
		model = Squad/Parts/Utility/GrapplingDevice/GrapplingArm
	}
	node_stack_top = 0.0, -0.1126614, 0.00, 0.0, -1.0, 0.0, 1
	node_attach = 0.0, 0.0, 0.00, 0.0, -1.0, 0.0, 1
	TechRequired = actuators
	entryCost = 5200
	cost = 450
	category = Coupling
	subcategory = 0
	title = Mini Grabbing Unit
	manufacturer = #autoLOC_501649 //#autoLOC_501649 = Kerbal Motion LLC
	description = #autoLOC_500862 //#autoLOC_500862 = Kerbal Motion engineers have long struggled with the problem of how to extract dropped tools from complicated machinery. After observing an intern cleaning out his shoes by turning them upside and shaking them inside the lab, our team was hit with a stroke of inspiration! Why not turn the rocket parts upside down and shake them? The grabbing arm perfectly filled this niche, and is quite capable of lifting heavy machinery. It has since found other uses, besides delicate tool extraction operations. AKA "The Klaw!"
	attachRules = 1,1,0,0,0
	mass = 0.0375
	dragModelType = default
	maximum_drag = 0.3
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 7
	maxTemp = 2000 // = 3600
	fuelCrossFeed = False
	crashTolerance = 50
	breakingForce = 50
	breakingTorque = 50
	bulkheadProfiles = size0, srf
	tags = #autoLOC_500863 //#autoLOC_500863 = a.r.m arm asteroid capture clam claw connect dock fasten grab join klaw nasa
	MODULE
	{
		name = ModuleGrappleNode
		nodeTransformName = ArticulatedCap
		deployAnimationController = 1
		nodeType = size1
		captureRange = 0.06
		captureMinFwdDot = 0.733
		captureMaxRvel = 1
	}
	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = Deploy
		startEventGUIName = #autoLOC_502073 //#autoLOC_502073 = Arm
		endEventGUIName = #autoLOC_502074 //#autoLOC_502074 = Disarm
		actionGUIName = #autoLOC_502075 //#autoLOC_502075 = Toggle Arming
	}
	MODULE
	{
		name = FXModuleLookAtConstraint
		CONSTRAINLOOKFX
		{
			rotatorsName = Piston1
			targetName = Sleeve1
		}
		CONSTRAINLOOKFX
		{
			rotatorsName = Sleeve1
			targetName = Mounting1
		}
		CONSTRAINLOOKFX
		{
			rotatorsName = Piston2
			targetName = Sleeve2
		}
		CONSTRAINLOOKFX
		{
			rotatorsName = Sleeve2
			targetName = Mounting2
		}
		CONSTRAINLOOKFX
		{
			rotatorsName = Piston3
			targetName = Sleeve3
		}
		CONSTRAINLOOKFX
		{
			rotatorsName = Sleeve3
			targetName = Mounting3
		}
		CONSTRAINLOOKFX
		{
			rotatorsName = Piston4
			targetName = Sleeve4
		}
		CONSTRAINLOOKFX
		{
			rotatorsName = Sleeve4
			targetName = Mounting4
		}
		CONSTRAINLOOKFX
		{
			rotatorsName = BaseSleeve1
			targetName = MainSleeveLookTarget
		}
	}
	MODULE
	{
		name = FlagDecal
		textureQuadName = flagTransform
	}
}
