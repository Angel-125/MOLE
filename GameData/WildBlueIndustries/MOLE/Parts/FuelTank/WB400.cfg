PART
{
// this is a sample config file, for determining a good file format for defining part parameters
// comment line - ignored by cfg parser
// empty lines, or lines without a '=' sign are also ignored
// all other lines are split at the '=' sign, and the left operand is used to know what parameter we are setting
// diferent parameters require data in different formats (see docs), and each module has it's own parameters (again, see docs)
// each assignment must be in a single line. Lines without assignments will be ignored. (You CAN turn on word wrap, though)
// each keyword here relates to an existing variable in the assigned module. If the keyword isn't found, it is ignored.
// conversely, if a keyword is left unassigned (as in not in the file), it will be initialized with it's default value
// This is done automatically, so any public variable defined in the loaded module can be accessed this way (provided it's value can be parsed)


	// --- general parameters ---
	name = WBI_WB400
	module = Part
	author = Angel-125

	// --- asset parameters ---
	MODEL
	{
		model = WildBlueIndustries/MOLE/Assets/WB400
	}
	rescaleFactor = 1


	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
	node_stack_top = 0.0, 0.6229, 0.0, 0.0, 1.0, 0.0
//	node_stack_inner = 0.0, 0.415, 0.0, 0.0, 1.0, 0.0
	node_stack_bottom = 0.0, -0.6229, 0.0, 0.0, -1.0, 0.0

	// --- editor parameters ---
	TechRequired = heavyRocketry
	entryCost = 1800
	cost = 1250
	category = FuelTank
	subcategory = 0
	title = WBM-400 Fuel Tank
	manufacturer = Wild Blue Industries
	description = This tank is one of Wild Blue Industries' first rocket components that actually worked as originally intended if you ignore the crew tunnel that was built through the center of the tank. Why the tank has the tunnel is beyond us, but at least the tank holds a fair amount of resources and has a built-in decoupler. It has a special attachment node on the top to enclose the 1.875m heat shield; just push the part inward until it snaps on the burried node. Once snapped to the inner-top node, be sure to turn off the heat shield shroud for a clean look.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,0

	// --- standard part parameters ---
	mass = 0.075
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 9
	maxTemp = 1400
	fuelCrossFeed = False
	bulkheadProfiles = size1p5, size2
	stageOffset = 1
	childStageOffset = 1
	ActivatesEvenIfDisconnected = true

	// --- FX definitions ---
	fx_gasBurst_white = 0.0, 0.0650517, 0.0, 0.0, 1.0, 0.0, decouple
	fx_exhaustFlame_yellow_tiny = 0.0, -0.17, 0.163, 0.0, 1.0, 0.0, running

	// --- Sound FX definition ---
	sound_vent_medium = engage
	sound_rocket_mini = running
	sound_vent_soft = disengage
	sound_vent_large = decouple

	MODULE
	{
		name = ModuleDecouple
		ejectionForce = 10
		explosiveNodeID = top
	}

	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
	}

	MODULE
	{
		name = ModuleBackseatSM
		disableRCSOnPart = WBI_Backseat
	}

	MODULE
	{
		name = ModuleEngines
		thrustVectorTransformName = thrustTransform
		throttleLocked = True
		exhaustDamage = True
		allowShutdown = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 18
		heatProduction = 550
		fxOffset = 0, 0, 0.02
		PROPELLANT
		{
			name = SolidFuel
			ratio = 1.0
			DrawGauge = True
		}
		atmosphereCurve
	 	{
		   	 key = 0 100
	  		 key = 1 100
	 	}
	
	}

	MODULE
	{
		name = WBIModuleRCSTechCheck
		upgradeTech = advFlightControl
		objects = RCSNodes
		upgradeResource = Equipment
		upgradeCost = 25
	}


	MODULE
	{
		name = ModuleRCS
		thrusterTransformName = rcsThruster
		thrusterPower = 0.75
		resourceName = MonoPropellant
		resourceFlowMode = ALL_VESSEL
		atmosphereCurve
		{
			key = 0 260
			key = 1 100
		}
	}

	MODULE
	{
		name = ModuleToggleCrossfeed
		crossfeedStatus = false
		toggleEditor = true
		toggleFlight = true
	}


	MODULE:NEEDS[KIS]
	{
		name = ModuleKISInventory
		maxVolume = 400
		externalAccess = true
		internalAccess = true
		slotsX = 6
		slotsY = 4
		slotSize = 50
		itemIconResolution = 128
		selfIconResolution = 128
		openSndPath = KIS/Sounds/containerOpen
		closeSndPath = KIS/Sounds/containerClose
		defaultMoveSndPath = KIS/Sounds/itemMove
	}

	MODULE
	{
		name = WBIConvertibleStorage
		enableLogging = True

		//Determines if the module allows in-field reconfiguring
		fieldReconfigurable = True

		//Require a confirmation click before changing resources
		confirmResourceSwitch = True

		//Determines whether or not to show the context menu GUI
		showGUI = True

		//Short name of the default module template.
		//This is used when selecting the part in the editor.
		//User will then right-click on the module to change its type.
		defaultTemplate = WBM-400

		//name of the template nodes to use
		templateNodes = STORAGE_TEMPLATE;MOLE_WB400Fuel

		//Some parts need to keep certain resources. If a template has a resource that should be skipped by
		//the resource switcher, then add the resource here. Separate different resources by a semicolon.
		resourcesToKeep = SolidFuel

		//Some containers don't hold as much resources as the template specifies, while others hold more.
		//Since the resource templates specify base amounts, the capacity factor specifies a multiplier to
		//factor into the resource amounts.
		capacityFactor = 0.25

		//If the part has a KIS container, this is the base and max amount
		baseStorage = 0.001
		maxStorage = 3000
	}

	MODULE:NEEDS[Pathfinder]
	{
		name = WBIResourceDistributor
	}

	RESOURCE
	{
		name = SolidFuel
		amount = 8
		maxAmount = 8
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 127
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 4000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = GT
			value = 0 // this just registers altitude as something to care about
			situationMask = 8
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 300000
			situationMask = 16
			body = _NotSun
		}
		CONSTRAINT
		{
			type = ALTITUDE
			test = LT
			value = 600000
			situationMask = 32
			body = _NotSun
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 0
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 600
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 300
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 1200
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 600
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 2500
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
	}

}

MOLE_WB400Fuel
{
	name = WB400Fuel
	author = Angel-125
	shortName = WBM-400
	logoPanel = WildBlueIndustries/000WildBlueTools/CommonTemplates/Decals/LFO
	glowPanel = WildBlueIndustries/000WildBlueTools/CommonTemplates/Decals/LFOGlow
	description = This kit stores liquid fuel, oxidizer, and monopropellant.

	RESOURCE
	{
		name = LiquidFuel
		amount = 720
		maxAmount = 720
	}

	RESOURCE
	{
		name = Oxidizer
		amount = 880
		maxAmount = 880
	}

	RESOURCE
	{
		name = MonoPropellant
		amount = 400
		maxAmount = 400
	}

}